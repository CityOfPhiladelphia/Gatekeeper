// default control sizes in ems
$tiny-control-size: 3em;
$small-control-size: 8em;
$medium-control-size: 12em;
$large-control-size: 18em;
$xlarge-control-size: 27em;

// basic styles
// ========================================================================

form {
    overflow: hidden;
	@include reset-box-model;
}

fieldset {
	@extend .well;
}

label {
	cursor: pointer;
}

.field {
	display: block;
	margin-bottom: 1em;
	width: $large-control-size;
	
	@media #{$mq-phone}{
		width: 100%;
	}
}

.field-label {

}

.field-control {
	// by default, fill available space
	@include box-sizing(border-box);
	width: 100%;
}

@mixin placeholder-style {
	font-weight: 300;
}

// combining these selectors with commas makes browsers unhappy
::-webkit-input-placeholder { @include placeholder-style; }
          :-moz-placeholder { @include placeholder-style; }
         ::-moz-placeholder { @include placeholder-style; }
     :-ms-input-placeholder { @include placeholder-style; }

// field control types
// ========================================================================

input,
textarea { // styles for text-box-like controls
	border: 1px solid #bbb;
	@include border-radius(0);
	@include box-shadow(inset 0 1px 0 rgba(black, .15));
	padding: .25em;
}

textarea {
	min-height: $small-control-size;
}

.tiny {
    width: $tiny-control-size;
}

.checkbox-field {
    .field-label {
        display: inline;
    }
    
    input {
        float: left;
        margin: .3em .5em 0 0;
        width: auto;
    }
    
    .hint {
        margin-bottom: 0;
    }
}

// special form types
// ========================================================================

// special fieldset types
// ========================================================================

@media #{$mq-tween}{
	.left-labels {
		display: table;
		
		.field {
			display: table-row;
			
			& > * {
				max-width: ($large-control-size / 1em) * $font-size;
			}
		}
		
		.field-label,
		.field-control {
			display: table-cell;
		}
		
		.field-label {
			padding: 0 1em 1em 0;
			text-align: right;
		}
		
		.field-control {
			width: $large-control-size;
		}
		
		.submit-area {
			margin-top: 1em;
			text-align: right;
		}
	}
	
	.inline-fields {
		.field {
			display: inline-block;
			vertical-align: top;
			
			& + .field {
				margin-left: 1em;
			}
		}
		
		.or {
		    color: $muted-color;
    		display: inline-block;
    		margin: 0 .5em;
    		vertical-align: -1.5em;
		}
		
		.hint {
    		margin-bottom: 0;
		}
	}
	
	.compound-field {
	    color: $muted-color;
    	width: auto;
    	
    	.field-label {
    	    color: initial;
        	display: block;
    	}
    	
    	input, select {
        	display: inline-block;
    	}
	}
}

// special conditions for fields
// ========================================================================

.has-error {
	color: #c00;
	
	.field-control {
		border-color: red;
	}
}

.show-required { // per fieldset or form
	.is-required {
		.field-label::before {
			content: '*\00a0';
		}
	}
	
	.submit-area::before {
		color: $muted-color;
		content: '* Required';
		float: left;
	}
}

// explanatory text
// ========================================================================

.hint {
	
}

.error-text {
	color: mix($muted-color, red, 75%);
	font-size: small;
}